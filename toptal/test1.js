const test1 = [
  "9C",
  "KS",
  "AC",
  "AH",
  "8D",
  "4C",
  "KD",
  "JC",
  "7D",
  "9D",
  "2H",
  "7C",
  "3C",
  "7S",
  "5C",
  "6H",
  "TH",
];
const test2 = [
  "2S",
  "2C",
  "2D",
//   "2H",
  "3S",
  "3C",
  "3D",
  "3H",
  "4S",
  "4C",
  "4D",
  "4H",
  "5S",
  "5C",
  "5D",
  "5H",
  "6S",
  "6C",
  "6D",
  "6H",
  "7S",
  "7C",
  "7D",
  "7H",
  "8S",
  "8C",
  "8D",
  "8H",
  "9S",
  "9C",
  "9D",
  "9H",
  "TS",
  "TC",
  "TD",
  "TH",
  "JS",
  "JC",
  "JD",
  "JH",
  "QS",
  "QC",
  "QD",
  "QH",
  "KS",
  "KC",
  "KD",
  "KH",
  "AS",
  "AC",
  "AD",
  "AH",
  "2S",
  "2C",
  "2D",
//   "2H",
  "3S",
  "3C",
  "3D",
  "3H",
  "4S",
  "4C",
  "4D",
  "4H",
  "5S",
  "5C",
  "5D",
  "5H",
  "6S",
  "6C",
  "6D",
  "6H",
  "7S",
  "7C",
  "7D",
  "7H",
  "8S",
  "8C",
  "8D",
  "8H",
  "9S",
  "9C",
  "9D",
  "9H",
  "TS",
  "TC",
  "TD",
  "TH",
  "JS",
  "JC",
  "JD",
  "JH",
  "QS",
  "QC",
  "QD",
  "QH",
  "KS",
  "KC",
  "KD",
  "KH",
  "AS",
  "AC",
  "AD",
  "AH",
  "2S",
  "2C",
  "2D",
//   "2H",
  "3S",
  "3C",
  "3D",
  "3H",
  "4S",
  "4C",
  "4D",
  "4H",
  "5S",
  "5C",
  "5D",
  "5H",
  "6S",
  "6C",
  "6D",
  "6H",
  "7S",
  "7C",
  "7D",
  "7H",
  "8S",
  "8C",
  "8D",
  "8H",
  "9S",
  "9C",
  "9D",
  "9H",
  "TS",
  "TC",
  "TD",
  "TH",
  "JS",
  "JC",
  "JD",
  "JH",
  "QS",
  "QC",
  "QD",
  "QH",
  "KS",
  "KC",
  "KD",
  "KH",
  "AS",
  "AC",
  "AD",
];
const test3 = ["TD", "TC", "6H", "5H", "KC", "JH", "QC", "4S", "2S", "8H", "JD", "2H", "AC", "7D", "6C", "5D", "AD", "TS", "4D", "KH", "3H", "9H", "3S", "2D", "5S", "6S", "AH", "JS", "6D", "9S", "4C", "7C", "8S", "AS", "KD", "7S", "4H", "KS", "7H", "9D", "8D", "3D", "5C", "9C", "QH", "JC", "8C", "TH", "QS", "3C", "QD", "2C"]

/**
 *
 * @param {string[]} arr
 */
const decksOfCards = (arr) => {
    const startingDeck = {};

    let max = 99999999;
    arr.forEach((card) => {
        const [rank, suit] = card.split("");
        if (!startingDeck[rank]) startingDeck[rank] = {}
        if (!startingDeck[rank][suit]) startingDeck[rank][suit] = 1
        else startingDeck[rank][suit] +=1 
    });

    if  (Object.keys(startingDeck).length !== 13) return 0;
    else {
        Object.values(startingDeck).forEach(v => {
            
            Object.values(v).forEach(a => {
                if (a < max) max = a;
                // console.log(a);
            })  
        })
        return max
    }

};

console.log(
    decksOfCards(test2)
);
